---
# Source: k8s-tunnel-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: k8s-tunnel-controller/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: Opaque
  stringData:
    token:
---
# Source: k8s-tunnel-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/status
  - secrets
  - configmaps
  - services
  - services/status
  - events
  verbs:
  - "*"
- apiGroups:
  - events.k8s.io
  resources:
  - events
  verbs:
  - "*"
---
# Source: k8s-tunnel-controller/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tunnels-k8s-tunnel-controller
subjects:
- kind: ServiceAccount
  name: tunnels-k8s-tunnel-controller
  namespace: default
---
# Source: k8s-tunnel-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
---
# Source: k8s-tunnel-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tunnels-k8s-tunnel-controller
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-tunnel-controller
      app.kubernetes.io/instance: tunnels
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s-tunnel-controller
        app.kubernetes.io/instance: tunnels
    spec:
      serviceAccountName: tunnels-k8s-tunnel-controller
      securityContext:
        {}
      containers:
        - name: k8s-tunnel-controller
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          image: "ghcr.io/angelbarrera92/k8s-tunnel-controller:main"
          imagePullPolicy: Always
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: tunnels-k8s-tunnel-controller
                  key: token
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
---
# Source: k8s-tunnel-controller/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "tunnels-k8s-tunnel-controller-test-connection"
  labels:
    helm.sh/chart: k8s-tunnel-controller-0.1.0
    app.kubernetes.io/name: k8s-tunnel-controller
    app.kubernetes.io/instance: tunnels
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['tunnels-k8s-tunnel-controller:8080/healthz']
  restartPolicy: Never
